{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.scss","p2-homeworks/h5/Header.module.scss","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.scss","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/MessageItem.tsx","p2-homeworks/h1/Message.tsx","Redux/H1/H1Reducer.tsx","p2-homeworks/h1/AlternativeMessage/AlternativeMessageItem/AlternativeMessageItem.tsx","p2-homeworks/h1/AlternativeMessage/AlternativeMessage.tsx","p2-homeworks/h1/AlternativeMessage/AlternativeMessageContainer.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","Redux/store.tsx","index.tsx","p2-homeworks/h4/HW4.module.scss","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.scss","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.scss"],"names":["module","exports","Error404","MessageItem","props","className","src","avatar","alt","name","message","time","Message","placeholder","NEW_TEXT","ADD_MESSAGE","initialState","messageData","id","newMessageText","messageDataReducer","state","action","type","text","length","AlternativeMessage","listMessage","map","elem","AlternativeMessageItem","textAreaMessage","React","createRef","ref","onChange","current","value","updateMessageText","onClick","Date","getHours","getMinutes","getSeconds","trim","alert","addMessage","AlternativeMessageAPI","this","Component","AlternativeMessageContainer","connect","homework1","dispatch","updateMessageTextAC","addMessageAC","HW1","spanStyle","margin","Affair","style","affair","priority","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","notError","e","target","disabled","GreetingContainer","users","addUserCallback","setName","setError","arrayUsers","key","HW3","setUsers","uuidv1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","necessary","restProps","finalSpanClassName","errorSpan","finalWrapperClassName","wrapperInput","errorWrapper","finalInputClassName","errorInput","input","finalNecessaryClassName","necessarySpan","settingPosition","currentTarget","SuperButton","red","finalClassName","redDis","wrapperButtonDis","wrapperButton","finalButton","defaultDis","default","SuperCheckbox","onChangeChecked","children","checked","divCheckboxTrue","divCheckboxFalse","finalCircClassName","circTrue","circFalse","label","checkbox","HW4","setText","showAlert","setChecked","column","test","blue","testSpanError","testButton","PreJunior","PATH","RoutesComponent","path","element","activeStyle","textDecoration","color","fontSize","Header","menu","setMenu","finalNavClassName","textNavActive","textNavDisable","finalButtonClassName","buttonMenuActive","buttonMenuDisable","to","isActive","undefined","buttonDiv","HW5","Routes","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.45f884a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButton\":\"SuperButton_wrapperButton__-eoLl\",\"wrapperButtonDis\":\"SuperButton_wrapperButtonDis__2VKD7\",\"defaultDis\":\"SuperButton_defaultDis__2RRQx\",\"default\":\"SuperButton_default__3R27D\",\"red\":\"SuperButton_red__3g1_d\",\"redDis\":\"SuperButton_redDis__VFUAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textNavActive\":\"Header_textNavActive__3I9gE\",\"textNavDisable\":\"Header_textNavDisable__2uGQH\",\"buttonDiv\":\"Header_buttonDiv__nqeL3\",\"buttonMenuActive\":\"Header_buttonMenuActive__1fTHi\",\"buttonMenuDisable\":\"Header_buttonMenuDisable__JppK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__FLIgf\",\"error\":\"Greeting_error__35PM3\",\"notError\":\"Greeting_notError__1PpHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3MlMn\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {FC} from \"react\";\r\nimport {MessagePropsType} from './Message'\r\n\r\n\r\n\r\nconst MessageItem:FC<MessagePropsType> = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={'messageItem'}>\r\n            <div className={'messageItem__avatar'}>\r\n                <img src={props.avatar} alt={'avatar'}/>\r\n            </div>\r\n            <div className={'messageItem__description'}>\r\n                <div className={'description'}>\r\n                    <div className={'description__name'}>\r\n                        <span>{props.name}</span>\r\n                    </div>\r\n                    <div className={'description__text'}>\r\n                        {props.message}\r\n                    </div>\r\n                    <div className={'description__time'}>\r\n                        <span>{props.time}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageItem","import React, {FC} from 'react'\nimport MessageItem from \"./MessageItem\";\n\nexport type MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time:string\n}\n\n\nconst Message:FC<MessagePropsType> = (props) => {\n    return (\n        <>\n            <div className={'message'}>\n                <MessageItem {...props} />\n                <div className={'message__text'}>\n                    <textarea  placeholder={'Write text'} />\n                </div>\n                <div className={'message__button'}>\n                    <button>Send</button>\n                </div>\n            </div>\n        </>\n)\n}\n\nexport default Message","\r\n\r\nconst NEW_TEXT = 'NEW_TEXT';\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nexport type messageDataType = {\r\n    key?:number\r\n    avatar: string\r\n    id:number\r\n    name:string\r\n    message:string\r\n    time:string\r\n}\r\nexport type stateMessageType = {\r\n    messageData: Array<messageDataType>\r\n    newMessageText :string\r\n}\r\n\r\nlet initialState:stateMessageType = {\r\n    messageData: [\r\n        {id:1, avatar:'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',name:'chickenDay', message:'Send me msg, pls ', time:'this time'},\r\n\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nconst messageDataReducer:any = (state:stateMessageType = initialState , action:any) => {\r\n    switch (action.type){\r\n        case NEW_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.text\r\n            }\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData,\r\n                    {\r\n                        id: state.messageData.length + 1,\r\n                        avatar:'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n                        name: 'chickenDay',\r\n                        message: state.newMessageText,\r\n                        time: action.time,\r\n                    }\r\n                ],\r\n                newMessageText: '',\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default messageDataReducer\r\n\r\n\r\nexport const addMessageAC = (time:string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        time: time\r\n    }\r\n}\r\n\r\n\r\nexport const updateMessageTextAC = (text:string) => {\r\n    return {\r\n        type:NEW_TEXT,\r\n        text: text\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\nconst MessageItem = (props:any) => {\r\n\r\n\r\n    return (\r\n        <div className={'messageItem'}>\r\n            <div className={'messageItem__avatar'}>\r\n                <img src={props.avatar} alt={'avatar'}/>\r\n            </div>\r\n            <div className={'arrow'} >\r\n\r\n            </div>\r\n            <div className={'messageItem__description'}>\r\n                <div className={'description'}>\r\n                    <div className={'description__name'}>\r\n                        <span>{props.name}</span>\r\n                    </div>\r\n                    <div className={'description__text'}>\r\n                        {props.message}\r\n                    </div>\r\n                    <div className={'description__time'}>\r\n                        <span>{props.time}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem","import React, {FC} from 'react'\r\nimport AlternativeMessageItem from \"./AlternativeMessageItem/AlternativeMessageItem\";\r\nimport {messageDataType} from \"../../../Redux/H1/H1Reducer\";\r\n\r\nexport type MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time:string\r\n}\r\n\r\n\r\nconst AlternativeMessage = (props:any) => {\r\n\r\n\r\n    let listMessage = props.messageData.map((elem: messageDataType) => {\r\n        return <AlternativeMessageItem key={elem.id} id={elem.id} message={elem.message}\r\n                            avatar={elem.avatar} name={elem.name} time={elem.time}/>\r\n    })\r\n\r\n\r\n\r\n    let textAreaMessage:any = React.createRef()\r\n\r\n\r\n\r\n    type onUpdateMessageType = () => void\r\n    const onUpdateMessage:onUpdateMessageType = () => {\r\n        let text = textAreaMessage.current.value\r\n        props.updateMessageText(text)\r\n    }\r\n\r\n\r\n    type onAddMessageType = () => void\r\n    const onAddMessage:onAddMessageType = () => {\r\n        const time = `${new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()}`\r\n        props.newMessageText.trim() === ''\r\n            ? alert('Message === null')\r\n            : props.addMessage(time)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <span>This with Redux</span>\r\n            <div className={'message'}>\r\n                {listMessage}\r\n                <div className={'message__text'}>\r\n                    <textarea ref={textAreaMessage} onChange={onUpdateMessage}\r\n                              value={props.newMessageText} placeholder={'Write text'} />\r\n                </div>\r\n                <div className={'message__button'}>\r\n                    <button onClick={onAddMessage} >Send</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {stateType} from \"../../../Redux/store\";\nimport {addMessageAC, updateMessageTextAC} from \"../../../Redux/H1/H1Reducer\";\nimport AlternativeMessage from \"./AlternativeMessage\";\nimport {Dispatch} from \"redux\";\n\n\nclass AlternativeMessageAPI extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n        return <AlternativeMessage messageData={this.props.messageData}\n                         newMessageText={this.props.newMessageText}\n                         updateMessageText = {this.props.updateMessageText}\n                         addMessage = {this.props.addMessage}\n        />\n    }\n}\n\nlet mapStateToProps = (state: stateType) => {\n    return {\n        messageData:state.homework1.messageData,\n        newMessageText: state.homework1.newMessageText\n    }\n}\n\ntype MapDispatchPropsType = {\n    updateMessageText: (text: string) => void,\n    addMessage: (time: string) => void,\n}\n\n    let mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        updateMessageText: (text:string) => {\n            dispatch(updateMessageTextAC(text))\n        },\n        addMessage: (time:string) => {\n            dispatch(addMessageAC(time))\n        }\n    }\n}\n\n\nexport const AlternativeMessageContainer = connect(mapStateToProps, mapDispatchToProps)(AlternativeMessageAPI)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport Message from './Message'\nimport {AlternativeMessageContainer} from \"./AlternativeMessage/AlternativeMessageContainer\";\nimport './_message.scss'\n\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            <AlternativeMessageContainer/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {FC} from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id:number) => void // need to fix any\n}\nconst spanStyle = {\n    margin:'5px'\n}\n\n\nconst Affair:FC<AffairPropsType> = (props) => {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id) }// need to fix\n\n    return (\n        <div>\n            <span style={spanStyle} >{props.affair.name}</span>\n            <span style={spanStyle}>{props.affair.priority}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {FC} from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from \"./HW2\";\n\n\n\n\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (arg0: FilterType) => void\n    deleteAffairCallback: (_id:number) => void\n}\n\n\n\nconst Affairs:FC<AffairsPropsType> = (props) => {\n\n\n\n\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n            {mappedAffairs}\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority:FilterType,\n}\n\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\n\n\ntype FilterAffairs = (affairs:Array<AffairType>, filter:FilterType) => Array<AffairType>\n//_____________________________________________________________________________\nexport const filterAffairs:FilterAffairs = (affairs, filter)  => { // need to fix any\n    if (filter === 'all') return affairs\n    if (filter === \"high\")return affairs.filter((elem:AffairType) => elem.priority === 'high')\n    if (filter === 'middle') return affairs.filter((elem:AffairType) => elem.priority === 'middle')\n    if (filter === 'low') return affairs.filter((elem:AffairType) => elem.priority === 'low')\n    else return affairs\n}\n\n\ntype DeleteAffair = (affairs: Array<AffairType>, _id:number) => Array<AffairType>\n//_____________________________________________________________________________\nexport const deleteAffair:DeleteAffair = (affairs, _id) => {\n    return affairs.filter((elem:AffairType) => elem._id !== _id)\n}\n\nfunction HW2() {\n\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n\n\n    type DeleteAffairCallback = (_id:number) => void\n    const deleteAffairCallback:DeleteAffairCallback = (_id) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\nimport {AddUser, SetNameCallback} from \"./GreetingContainer\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: SetNameCallback\n    addUser: AddUser\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error !== '' ? s.error : s.notError // need to fix with (?:)\n    return (\n        <div>\n            <input value={name}\n                   onChange={(e) => {setNameCallback(e.target.value)} }\n                   className={inputClass} />\n            <span>{error}</span>\n            <button disabled={name.trim() === ''}  onClick={() => {addUser(name)} }>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {AddUserCallback, UserType} from \"./HW3\";\n\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: AddUserCallback // need to fix any\n}\nexport type SetNameCallback = (e: string) => void\nexport type AddUser = (name: string) => void\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback: SetNameCallback = (e) => { // need to fix any\n        setName(e) // need to fix\n    }\n    const addUser: AddUser = (text) => {\n        if (text.trim() === ''){\n            setError('Давай без пустых строк, браток')\n            setName('')\n        }else if (text.trim().length < 3){\n            setError('Имя должно быть больше 3 символов')\n            setName(text.trim())\n        }else{\n            setError('')\n            alert(`Hello ${text.trim()} !`)\n            addUserCallback(text)\n            setName('')\n        }\n\n\n    }\n\n    const totalUsers: number = users.length // need to fix\n\n    const arrayUsers = users.map(elem => {\n        return <div key={elem.key}><span>{elem.name}</span></div>\n    })\n\n    return (\n        <>\n            {arrayUsers}\n            <Greeting\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                error={error}\n                totalUsers={totalUsers}\n            />\n        </>\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport { v1 as uuidv1 } from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n    key: string\n}\nexport type AddUserCallback = (name:string) => void\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n\n\n    const addUserCallback:AddUserCallback = (name) => { // need to fix any\n        setUsers([...users,{_id: uuidv1(), name:name, key: uuidv1()}]) // need to fix\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    position?: string\n    necessary?: boolean\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type,\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className,\n        spanClassName,\n        necessary,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter && e.key === 'Enter' && onEnter()\n    }\n\n    const finalSpanClassName = `${spanClassName ? spanClassName : ''} ${s.errorSpan} `\n    const finalWrapperClassName = `${s.wrapperInput} ${error ? s.errorWrapper : ''} ${className}`\n    const finalInputClassName = `${error ? s.errorInput : s.input}`\n    const finalNecessaryClassName = `${necessary ? s.necessarySpan : ''}`\n\n    return (\n        <div className={s.settingPosition}>\n            <div className={finalWrapperClassName}>\n                <input\n                    type={'text'}\n                    onChange={onChangeCallback}\n                    onKeyPress={onKeyPressCallback}\n                    className={finalInputClassName}\n\n                    {...restProps}\n                />\n                <span className={finalNecessaryClassName}>{necessary ? '*' : ''}</span>\n            </div>\n            {error && <span className={finalSpanClassName}>{error}</span>}\n\n        </div>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.scss'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps\n    }\n) => {\n\n\n    const finalClassName = `${className} ${red ? \n        restProps.disabled ? s.redDis: s.red  :\n        restProps.disabled ? s.wrapperButtonDis : s.wrapperButton } `\n    const finalButton = `${restProps.disabled ? s.defaultDis : s.default}`\n\n\n    return (\n        <div className={finalClassName}>\n            <button\n                className={finalButton}\n                {...restProps}\n            />\n        </div>\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\nimport s from './SuperCheckbox.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n    const finalInputClassName = `${restProps.checked ? s.divCheckboxTrue : s.divCheckboxFalse} ${className ? className : ''}`\n    const finalCircClassName = `${restProps.checked ? s.circTrue : s.circFalse} ${className ? className : '' } `\n\n\n    return (\n        <label className={s.label}  >\n            <div className={finalInputClassName} >\n                <div className={finalCircClassName}/>\n            </div>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n\n                {...restProps}\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.scss'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text.trim() ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text)\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n\n\n\n        <div>\n            \n\n            <div className={s.column}>\n                <div className={s.test}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    necessary\n                    // spanClassName={s.testSpanError}\n                />\n                </div>\n                <div className={s.test}>\n                <SuperInputText\n                    necessary\n                    className={s.blue}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n                </div>\n                <div className={s.test}>\n                <SuperButton onClick={showAlert} className={s.testButton} >\n                    default\n                </SuperButton>\n                </div>\n                <div className={s.test}>\n                <SuperButton\n                    red\n                    onClick={showAlert}\n                >Red Button\n                </SuperButton>\n                </div>\n\n                <div className={s.test}>\n                <SuperButton disabled>\n                    Disabled\n                </SuperButton>\n                </div>\n                <div className={s.test}>\n                <SuperButton red disabled>\n                    Disabled\n                </SuperButton>\n                </div>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text\n                </SuperCheckbox>\n\n\n                {/*<SuperCheckbox checked={checked} onChange={testOnChange}/>*/}\n            </div>\n\n            <hr/>\n\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport {Route, Routes, Navigate, useNavigate, useLocation} from \"react-router-dom\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n    // add paths\n}\n\n\n\n\nfunction RoutesComponent(props: any) {\n\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} element = {<Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            <Routes>\n                <Route path={'/'} element={<PreJunior/>}/>\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                {/*<Route path={PATH.JUNIOR} element={}  />*/}\n                {/*<Route path={PATH.JUNIOR_PLUS}  />*/}\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                {}\n                <Route element={<Error404/>}/>\n            </Routes>\n\n\n        </div>\n\n    )\n}\n\nexport default RoutesComponent\n","import React, {useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.scss'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\n\nconst activeStyle:any = {\n    textDecoration: \"none\",\n    color: \"rgba(192, 44, 70, 0.5)\",\n    fontSize: 20 + 'px'\n}\n\n\nfunction Header() {\n    const [menu,setMenu] = useState(false)\n    const finalNavClassName = `${ menu ? s.textNavActive : s.textNavDisable}`\n    const finalButtonClassName = `${menu? s.buttonMenuActive : s.buttonMenuDisable}`\n\n    const visibleMenu = () => {\n        menu ? setMenu(false): setMenu(true)\n    }\n\n    return (\n        <>\n        <div className={finalNavClassName}>\n            <NavLink to={PATH.PRE_JUNIOR} style = {({ isActive }) =>\n                isActive ? activeStyle : undefined} >Pre-junior</NavLink>\n            <NavLink to={PATH.JUNIOR} style = {({ isActive }) =>\n                isActive ? activeStyle : undefined} >Junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} style = {({ isActive }) =>\n                isActive ? activeStyle : undefined} >Junior+</NavLink>\n        </div>\n            <div className={s.buttonDiv} onClick={visibleMenu}>\n            <SuperButton className={finalButtonClassName} >Menu</SuperButton>\n            </div>\n        </>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport {HashRouter, useLocation} from \"react-router-dom\";\nimport RoutesComponent from \"./Routes\";\n\nfunction HW5() {\n\n    return (\n        <div>\n\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <RoutesComponent/>\n\n            </HashRouter>\n\n        </div>\n    )\n}\n\nexport default HW5\n\n\n\n","import React from 'react'\nimport s from './App.module.scss'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import {CombinedState, combineReducers, createStore} from \"redux\";\r\nimport messageDataReducer, {stateMessageType} from './H1/H1Reducer'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    homework1:messageDataReducer\r\n})\r\n\r\ntype AppStateType = ReturnType<typeof reducers>\r\n\r\nexport type stateType = {\r\n    homework1: stateMessageType\r\n    newMessageText: string\r\n}\r\n\r\nexport type storeType = {\r\n    store: CombinedState<any>\r\n}\r\n\r\nlet store = createStore(reducers)\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n\n    <React.StrictMode>\n\n        <Provider store={store}>\n\n        <App/>\n\n        </Provider>\n    </React.StrictMode>\n,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RHWr\",\"column\":\"HW4_column__1rp7V\",\"testSpanError\":\"HW4_testSpanError__20JtV\",\"test\":\"HW4_test__2Mtth\",\"testButton\":\"HW4_testButton__2xtur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingPosition\":\"SuperInputText_settingPosition__MomP5\",\"superInput\":\"SuperInputText_superInput__3EgLh\",\"wrapperInput\":\"SuperInputText_wrapperInput__2Xwbi\",\"errorWrapper\":\"SuperInputText_errorWrapper__2ZC0B\",\"input\":\"SuperInputText_input__1uL_k\",\"errorInput\":\"SuperInputText_errorInput__8szvH\",\"necessarySpan\":\"SuperInputText_necessarySpan__3ptde\",\"errorSpan\":\"SuperInputText_errorSpan__1w_tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__GwoqK\",\"spanClassName\":\"SuperCheckbox_spanClassName__22eC-\",\"label\":\"SuperCheckbox_label__3DcEC\",\"divCheckboxTrue\":\"SuperCheckbox_divCheckboxTrue__3lJj1\",\"divCheckboxFalse\":\"SuperCheckbox_divCheckboxFalse__1_dl7\",\"circFalse\":\"SuperCheckbox_circFalse__26MLM\",\"circTrue\":\"SuperCheckbox_circTrue__3p9mL\",\"circTrueHover\":\"SuperCheckbox_circTrueHover__v8-9b\"};"],"sourceRoot":""}