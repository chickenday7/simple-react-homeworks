{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.scss","p2-homeworks/h5/Header.module.scss","p2-homeworks/h6/HW6Style.module.scss","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.scss","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/MessageItem.tsx","p2-homeworks/h1/Message.tsx","Redux/H1/H1Reducer.tsx","p2-homeworks/h1/AlternativeMessage/AlternativeMessageItem/AlternativeMessageItem.tsx","p2-homeworks/h1/AlternativeMessage/AlternativeMessage.tsx","p2-homeworks/h1/AlternativeMessage/AlternativeMessageContainer.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","Redux/store.tsx","index.tsx","p2-homeworks/h4/HW4.module.scss","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.scss","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.scss"],"names":["module","exports","Error404","MessageItem","props","className","src","avatar","alt","name","message","time","Message","placeholder","NEW_TEXT","ADD_MESSAGE","initialState","messageData","id","newMessageText","messageDataReducer","state","action","type","text","length","AlternativeMessage","listMessage","map","elem","AlternativeMessageItem","textAreaMessage","React","createRef","ref","onChange","current","value","updateMessageText","onClick","Date","getHours","getMinutes","getSeconds","trim","alert","addMessage","AlternativeMessageAPI","this","Component","AlternativeMessageContainer","connect","homework1","dispatch","updateMessageTextAC","addMessageAC","HW1","spanStyle","margin","Affair","style","affair","priority","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","setAllButton","e","setFilter","setAll","currentTarget","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","notError","disabled","GreetingContainer","users","addUserCallback","setName","setError","arrayUsers","key","HW3","setUsers","uuidv1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","necessary","restProps","finalSpanClassName","errorSpan","finalWrapperClassName","wrapperInput","errorWrapper","finalInputClassName","errorInput","input","finalNecessaryClassName","necessarySpan","settingPosition","SuperButton","red","textStyle","finalClassName","redDis","wrapperButtonDis","wrapperButton","finalButton","defaultDis","default","SuperCheckbox","onChangeChecked","children","checked","divCheckboxTrue","divCheckboxFalse","finalCircClassName","circTrue","circFalse","label","checkbox","HW4","setText","showAlert","setChecked","column","test","blue","testSpanError","testButton","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","wrapperButtons","button","PreJunior","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","Junior","PATH","RoutesComponent","path","element","activeStyle","textDecoration","color","fontSize","Header","menu","setMenu","finalButtonClassName","buttonMenuActive","buttonMenuDisable","finalExample","exampleActive","exampleDisable","textNav","to","isActive","buttonDiv","HW5","Routes","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5f9bf1e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButton\":\"SuperButton_wrapperButton__3lBln\",\"wrapperButtonDis\":\"SuperButton_wrapperButtonDis__3WNhl\",\"defaultDis\":\"SuperButton_defaultDis__JY8uy\",\"default\":\"SuperButton_default__E9Fug\",\"red\":\"SuperButton_red__AyqKq\",\"redDis\":\"SuperButton_redDis__eIgYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textNav\":\"Header_textNav__3YegJ\",\"buttonDiv\":\"Header_buttonDiv__3GJqs\",\"buttonMenuActive\":\"Header_buttonMenuActive__2hGks\",\"buttonMenuDisable\":\"Header_buttonMenuDisable__2JN-k\",\"exampleDisable\":\"Header_exampleDisable__-Wbi5\",\"menuLeft\":\"Header_menuLeft__1wWOD\",\"exampleActive\":\"Header_exampleActive__93K93\",\"menuRight\":\"Header_menuRight__GwLnr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"HW6Style_wrapperInput__1XjCZ\",\"wrapperButtons\":\"HW6Style_wrapperButtons__3Len3\",\"button\":\"HW6Style_button__afpbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\",\"notError\":\"Greeting_notError__1-UDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3Wf-J\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {FC} from \"react\";\r\nimport {MessagePropsType} from './Message'\r\n\r\n\r\n\r\nconst MessageItem:FC<MessagePropsType> = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={'messageItem'}>\r\n            <div className={'messageItem__avatar'}>\r\n                <img src={props.avatar} alt={'avatar'}/>\r\n            </div>\r\n            <div className={'messageItem__description'}>\r\n                <div className={'description'}>\r\n                    <div className={'description__name'}>\r\n                        <span>{props.name}</span>\r\n                    </div>\r\n                    <div className={'description__text'}>\r\n                        {props.message}\r\n                    </div>\r\n                    <div className={'description__time'}>\r\n                        <span>{props.time}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageItem","import React, {FC} from 'react'\nimport MessageItem from \"./MessageItem\";\n\nexport type MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time:string\n}\n\n\nconst Message:FC<MessagePropsType> = (props) => {\n    return (\n        <>\n            <div className={'message'}>\n                <MessageItem {...props} />\n                <div className={'message__text'}>\n                    <textarea  placeholder={'Write text'} />\n                </div>\n                <div className={'message__button'}>\n                    <button>Send</button>\n                </div>\n            </div>\n        </>\n)\n}\n\nexport default Message","\r\n\r\nconst NEW_TEXT = 'NEW_TEXT';\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nexport type messageDataType = {\r\n    key?:number\r\n    avatar: string\r\n    id:number\r\n    name:string\r\n    message:string\r\n    time:string\r\n}\r\nexport type stateMessageType = {\r\n    messageData: Array<messageDataType>\r\n    newMessageText :string\r\n}\r\n\r\nlet initialState:stateMessageType = {\r\n    messageData: [\r\n        {id:1, avatar:'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',name:'chickenDay', message:'Send me msg, pls ', time:'this time'},\r\n\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nconst messageDataReducer:any = (state:stateMessageType = initialState , action:any) => {\r\n    switch (action.type){\r\n        case NEW_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.text\r\n            }\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData,\r\n                    {\r\n                        id: state.messageData.length + 1,\r\n                        avatar:'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n                        name: 'chickenDay',\r\n                        message: state.newMessageText,\r\n                        time: action.time,\r\n                    }\r\n                ],\r\n                newMessageText: '',\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default messageDataReducer\r\n\r\n\r\nexport const addMessageAC = (time:string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        time: time\r\n    }\r\n}\r\n\r\n\r\nexport const updateMessageTextAC = (text:string) => {\r\n    return {\r\n        type:NEW_TEXT,\r\n        text: text\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\nconst MessageItem = (props:any) => {\r\n\r\n\r\n    return (\r\n        <div className={'messageItem'}>\r\n            <div className={'messageItem__avatar'}>\r\n                <img src={props.avatar} alt={'avatar'}/>\r\n            </div>\r\n            <div className={'arrow'} >\r\n\r\n            </div>\r\n            <div className={'messageItem__description'}>\r\n                <div className={'description'}>\r\n                    <div className={'description__name'}>\r\n                        <span>{props.name}</span>\r\n                    </div>\r\n                    <div className={'description__text'}>\r\n                        {props.message}\r\n                    </div>\r\n                    <div className={'description__time'}>\r\n                        <span>{props.time}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem","import React, {FC} from 'react'\r\nimport AlternativeMessageItem from \"./AlternativeMessageItem/AlternativeMessageItem\";\r\nimport {messageDataType} from \"../../../Redux/H1/H1Reducer\";\r\n\r\nexport type MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time:string\r\n}\r\n\r\n\r\nconst AlternativeMessage = (props:any) => {\r\n\r\n\r\n    let listMessage = props.messageData.map((elem: messageDataType) => {\r\n        return <AlternativeMessageItem key={elem.id} id={elem.id} message={elem.message}\r\n                            avatar={elem.avatar} name={elem.name} time={elem.time}/>\r\n    })\r\n\r\n\r\n\r\n    let textAreaMessage:any = React.createRef()\r\n\r\n\r\n\r\n    type onUpdateMessageType = () => void\r\n    const onUpdateMessage:onUpdateMessageType = () => {\r\n        let text = textAreaMessage.current.value\r\n        props.updateMessageText(text)\r\n    }\r\n\r\n\r\n    type onAddMessageType = () => void\r\n    const onAddMessage:onAddMessageType = () => {\r\n        const time = `${new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()}`\r\n        props.newMessageText.trim() === ''\r\n            ? alert('Message === null')\r\n            : props.addMessage(time)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <span>This with Redux</span>\r\n            <div className={'message'}>\r\n                {listMessage}\r\n                <div className={'message__text'}>\r\n                    <textarea ref={textAreaMessage} onChange={onUpdateMessage}\r\n                              value={props.newMessageText} placeholder={'Write text'} />\r\n                </div>\r\n                <div className={'message__button'}>\r\n                    <button onClick={onAddMessage} >Send</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {stateType} from \"../../../Redux/store\";\nimport {addMessageAC, updateMessageTextAC} from \"../../../Redux/H1/H1Reducer\";\nimport AlternativeMessage from \"./AlternativeMessage\";\nimport {Dispatch} from \"redux\";\n\n\nclass AlternativeMessageAPI extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n        return <AlternativeMessage messageData={this.props.messageData}\n                         newMessageText={this.props.newMessageText}\n                         updateMessageText = {this.props.updateMessageText}\n                         addMessage = {this.props.addMessage}\n        />\n    }\n}\n\nlet mapStateToProps = (state: stateType) => {\n    return {\n        messageData:state.homework1.messageData,\n        newMessageText: state.homework1.newMessageText\n    }\n}\n\ntype MapDispatchPropsType = {\n    updateMessageText: (text: string) => void,\n    addMessage: (time: string) => void,\n}\n\n    let mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        updateMessageText: (text:string) => {\n            dispatch(updateMessageTextAC(text))\n        },\n        addMessage: (time:string) => {\n            dispatch(addMessageAC(time))\n        }\n    }\n}\n\n\nexport const AlternativeMessageContainer = connect(mapStateToProps, mapDispatchToProps)(AlternativeMessageAPI)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport Message from './Message'\nimport {AlternativeMessageContainer} from \"./AlternativeMessage/AlternativeMessageContainer\";\nimport './_message.scss'\n\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            <AlternativeMessageContainer/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {FC} from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id:number) => void // need to fix any\n}\nconst spanStyle = {\n    margin:'5px'\n}\n\n\nconst Affair:FC<AffairPropsType> = (props) => {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id) }// need to fix\n\n    return (\n        <div>\n            <span style={spanStyle} >{props.affair.name}</span>\n            <span style={spanStyle}>{props.affair.priority}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {FC,MouseEvent}  from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from \"./HW2\";\n\n\n\n\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (arg0: FilterType) => void\n    deleteAffairCallback: (_id:number) => void\n}\n\n\n\nconst Affairs:FC<AffairsPropsType> = (props) => {\n\n\n\n\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = (e:string) => {props.setFilter(e as \"all\" | \"high\" | \"middle\" | \"low\")}\n    const setAllButton = (e:MouseEvent<HTMLButtonElement>)=>{setAll(e.currentTarget.name)}\n\n\n    return (\n        <div>\n            {mappedAffairs}\n            <button name={'all'} onClick={setAllButton}>All</button>\n            <button name={'high'} onClick={setAllButton}>High</button>\n            <button name={'middle'} onClick={setAllButton}>Middle</button>\n            <button name={'low'} onClick={setAllButton}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority:FilterType,\n}\n\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\n\n\ntype FilterAffairs = (affairs:Array<AffairType>, filter:FilterType) => Array<AffairType>\n//_____________________________________________________________________________\nexport const filterAffairs:FilterAffairs = (affairs, filter)  => { // need to fix any\n    if (filter === 'all') return affairs\n    if (filter === \"high\")return affairs.filter((elem:AffairType) => elem.priority === 'high')\n    if (filter === 'middle') return affairs.filter((elem:AffairType) => elem.priority === 'middle')\n    if (filter === 'low') return affairs.filter((elem:AffairType) => elem.priority === 'low')\n    else return affairs\n}\n\n\ntype DeleteAffair = (affairs: Array<AffairType>, _id:number) => Array<AffairType>\n//_____________________________________________________________________________\nexport const deleteAffair:DeleteAffair = (affairs, _id) => {\n    return affairs.filter((elem:AffairType) => elem._id !== _id)\n}\n\nfunction HW2() {\n\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n\n\n    type DeleteAffairCallback = (_id:number) => void\n    const deleteAffairCallback:DeleteAffairCallback = (_id) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\nimport {AddUser, SetNameCallback} from \"./GreetingContainer\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: SetNameCallback\n    addUser: AddUser\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error !== '' ? s.error : s.notError // need to fix with (?:)\n    return (\n        <div>\n            <input value={name}\n                   onChange={(e) => {setNameCallback(e.currentTarget.value)} }\n                   className={inputClass} />\n            <span>{error}</span>\n            <button disabled={name.trim() === ''}  onClick={() => {addUser(name)} }>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {AddUserCallback, UserType} from \"./HW3\";\n\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: AddUserCallback // need to fix any\n}\nexport type SetNameCallback = (e: string) => void\nexport type AddUser = (name: string) => void\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback: SetNameCallback = (e) => { // need to fix any\n        setName(e) // need to fix\n    }\n    const addUser: AddUser = (text) => {\n        if (text.trim() === ''){\n            setError('Давай без пустых строк, браток')\n            setName('')\n        }else if (text.trim().length < 3){\n            setError('Имя должно быть больше 3 символов')\n            setName(text.trim())\n        }else{\n            setError('')\n            alert(`Hello ${text.trim()} !`)\n            addUserCallback(text)\n            setName('')\n        }\n\n\n    }\n\n    const totalUsers: number = users.length // need to fix\n\n    const arrayUsers = users.map(elem => {\n        return <div key={elem.key}><span>{elem.name}</span></div>\n    })\n\n    return (\n        <>\n            {arrayUsers}\n            <Greeting\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                error={error}\n                totalUsers={totalUsers}\n            />\n        </>\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport { v1 as uuidv1 } from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n    key: string\n}\nexport type AddUserCallback = (name:string) => void\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n\n\n    const addUserCallback:AddUserCallback = (name) => { // need to fix any\n        setUsers([...users,{_id: uuidv1(), name:name, key: uuidv1()}]) // need to fix\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    position?: string\n    necessary?: boolean\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type,\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className,\n        spanClassName,\n        necessary,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter && e.key === 'Enter' && onEnter()\n    }\n\n    const finalSpanClassName = `${spanClassName ? spanClassName : ''} ${s.errorSpan} `\n    const finalWrapperClassName = `${className!} ${s.wrapperInput} ${error ? s.errorWrapper : ''} `\n    const finalInputClassName = `${error ? s.errorInput : s.input}`\n    const finalNecessaryClassName = `${necessary ? s.necessarySpan : ''}`\n\n    return (\n\n        <div className={finalWrapperClassName}>\n            <div className={s.settingPosition}>\n                <input\n                    type={type}\n                    onChange={onChangeCallback}\n                    onKeyPress={onKeyPressCallback}\n                    className={finalInputClassName}\n\n                    {...restProps}\n                />\n                <span className={finalNecessaryClassName}>{necessary ? '*' : ''}</span>\n                {error && <span className={finalSpanClassName}>{error}</span>}\n            </div>\n\n        </div>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.scss'\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n    textStyle?:string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        textStyle, onClick,\n        ...restProps\n    }\n) => {\n\n\n    const finalClassName = `${className} ${red\n        ? restProps.disabled ? s.redDis: s.red\n        : restProps.disabled ? s.wrapperButtonDis : s.wrapperButton} `\n    const finalButton = `${restProps.disabled ? s.defaultDis : s.default } ${textStyle}`\n    const onClickHandler = (e:any) => {\n        onClick && onClick(e)\n    }\n\n    return (\n        <div className={finalClassName} onClick={onClickHandler}>\n            <button\n                className={finalButton}\n                {...restProps}\n            />\n        </div>\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\nimport s from './SuperCheckbox.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n    const finalInputClassName = `${restProps.checked ? s.divCheckboxTrue : s.divCheckboxFalse} ${className ? className : ''}`\n    const finalCircClassName = `${restProps.checked ? s.circTrue : s.circFalse} ${className ? className : '' } `\n\n\n    return (\n        <label className={s.label}  >\n            <div className={finalInputClassName} >\n                <div className={finalCircClassName}/>\n            </div>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n\n                {...restProps}\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.scss'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text.trim() ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text)\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n\n\n\n        <div>\n            \n\n            <div className={s.column}>\n                <div className={s.test}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    necessary\n                    // spanClassName={s.testSpanError}\n                />\n                </div>\n                <div className={s.test}>\n                <SuperInputText\n                    necessary\n                    className={s.blue}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n                </div>\n                <div className={s.test}>\n                <SuperButton onClick={showAlert} className={s.testButton} >\n                    default\n                </SuperButton>\n                </div>\n                <div className={s.test}>\n                <SuperButton\n                    red\n                    onClick={showAlert}\n                >Red Button\n                </SuperButton>\n                </div>\n\n                <div className={s.test}>\n                <SuperButton disabled>\n                    Disabled\n                </SuperButton>\n                </div>\n                <div className={s.test}>\n                <SuperButton red disabled>\n                    Disabled\n                </SuperButton>\n                </div>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text\n                </SuperCheckbox>\n\n\n                {/*<SuperCheckbox checked={checked} onChange={testOnChange}/>*/}\n            </div>\n\n            <hr/>\n\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n        setEditMode(false)\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n        setEditMode(true)\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport s from './HW6Style.module.scss'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', ''))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div className={s.wrapperInput}>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <div className={s.wrapperButtons}>\n                <SuperButton className={s.button} onClick={save}>save</SuperButton>\n                <SuperButton className={s.button} onClick={restore}>restore</SuperButton>\n            </div>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option:string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o,i) => {\n        return <option key={i} value={o}>{o}</option>\n    }):[]; // map options with key\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        onChange && onChange(e)\n    }\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                onChange={onChangeCallback}\n                name={name}\n                value={o}\n                checked={value === options[i]}\n\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import React from \"react\";\nimport HW7 from \"../../h7/HW7\";\n\n\n\n\nexport const Junior = () => {\n  return(\n      <div>\n          <HW7/>\n      </div>\n  )\n}","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {Junior} from \"./pages/Junior\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n    // add paths\n}\n\n\n\n\nfunction RoutesComponent() {\n\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} element = {<Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            <Routes>\n                <Route path={'/'} element={<PreJunior/>}/>\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                {/*<Route path={PATH.JUNIOR_PLUS}  />*/}\n\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n\n                <Route path={'/*'} element={<Error404/>}/>\n            </Routes>\n\n\n        </div>\n\n    )\n}\n\nexport default RoutesComponent\n","import React, {useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.scss'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\n\ntype activeStyle = {\n    textDecoration:string,\n    color:string,\n    fontSize:string\n}\nconst activeStyle:any = {\n    textDecoration: \"none\",\n    color: \"rgba(192, 44, 70, 0.5)\",\n    fontSize: 20 + 'px'\n}\n\n\nfunction Header() {\n    const [menu,setMenu] = useState(false)\n    const finalButtonClassName = `${menu? s.buttonMenuActive : s.buttonMenuDisable}`\n    const finalExample = `${menu ? s.exampleActive: s.exampleDisable}`\n\n    const visibleMenu = () => {\n        menu ? setMenu(false): setMenu(true)\n    }\n\n    return (\n        <div className={finalExample}>\n        <div className={s.textNav}>\n            <NavLink to={PATH.PRE_JUNIOR} style = {({ isActive }) =>\n                isActive ? activeStyle : undefined} >Pre-junior</NavLink>\n            <NavLink to={PATH.JUNIOR} style = {({ isActive }) =>\n                isActive ? activeStyle : undefined} >Junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} style = {({ isActive }) =>\n                isActive ? activeStyle : undefined} >Junior+</NavLink>\n        </div>\n            <div className={s.buttonDiv} onClick={visibleMenu}>\n            <SuperButton className={finalButtonClassName} >Menu</SuperButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport {HashRouter} from \"react-router-dom\";\nimport RoutesComponent from \"./Routes\";\n\nfunction HW5() {\n\n    return (\n        <div>\n\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <RoutesComponent/>\n\n            </HashRouter>\n\n        </div>\n    )\n}\n\nexport default HW5\n\n\n\n","import React from 'react'\nimport s from './App.module.scss'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import {CombinedState, combineReducers, createStore} from \"redux\";\r\nimport messageDataReducer, {stateMessageType} from './H1/H1Reducer'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    homework1:messageDataReducer\r\n})\r\n\r\ntype AppStateType = ReturnType<typeof reducers>\r\n\r\nexport type stateType = {\r\n    homework1: stateMessageType\r\n    newMessageText: string\r\n}\r\n\r\nexport type storeType = {\r\n    store: CombinedState<any>\r\n}\r\n\r\nlet store = createStore(reducers)\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n\n    <React.StrictMode>\n\n        <Provider store={store}>\n\n        <App/>\n\n        </Provider>\n    </React.StrictMode>\n,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3QbY1\",\"column\":\"HW4_column__3Eb1_\",\"testSpanError\":\"HW4_testSpanError__3MRuU\",\"test\":\"HW4_test__27ynD\",\"testButton\":\"HW4_testButton__z_VVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingPosition\":\"SuperInputText_settingPosition__1B3ln\",\"superInput\":\"SuperInputText_superInput__3JOyp\",\"wrapperInput\":\"SuperInputText_wrapperInput__1SrT8\",\"errorWrapper\":\"SuperInputText_errorWrapper__1qa_5\",\"input\":\"SuperInputText_input__BS-Z6\",\"errorInput\":\"SuperInputText_errorInput__2PxaS\",\"necessarySpan\":\"SuperInputText_necessarySpan__1ngdw\",\"errorSpan\":\"SuperInputText_errorSpan__EwtmQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2s8QL\",\"spanClassName\":\"SuperCheckbox_spanClassName__cEBZ0\",\"label\":\"SuperCheckbox_label__3sYBk\",\"divCheckboxTrue\":\"SuperCheckbox_divCheckboxTrue__Y5ifY\",\"divCheckboxFalse\":\"SuperCheckbox_divCheckboxFalse__2Q436\",\"circFalse\":\"SuperCheckbox_circFalse__1b7q9\",\"circTrue\":\"SuperCheckbox_circTrue__2GnvG\",\"circTrueHover\":\"SuperCheckbox_circTrueHover__NW4N-\"};"],"sourceRoot":""}